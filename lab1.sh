#1. Войдите в систему, используя имя пользователя и пароль, выданные вам преподавателем.
#2. Определите имя машины. Найдите две разные команды, которыми можно это сделать.
hostname
echo $HOSTNAME

#3. Определите архитектуру процессора машины, используемой вами.
arch
uname -m

#4. Выведите на экран время и дату в формате «31/12/2099 23:59».
date "+%d/%m/%y %H:%M"

#5. Выведите на экран полный список алиасов пользователя. Создайте алиас для команды newdate, чтобы она выводила дату в формате «31/12/2099 23:59».
alias
alias newdate='date "+%d/%m/%y %H:%M"'
newdate

#6. Выведите на экран переменные среды. Объясните, что означают переменные SHELL, USER, PATH, HOME, LANG, MAIL, PS1.
env
# SHELL - твой shell
# USER - твой юзер
# PATH - текущая директория
# HOME - твой хомяк (домашняя дира) # LANG - текущая локаль
# MAIL - директория с письмами
# PS1 - пригласительное сообщение для ввода команды

#7. Измените переменную PS1, что изменилось?
PS1="myshell: "

#8. Запустите приложение bash, изменив переменную домашнего каталога пользователя.
HOME=/ bash
#Проверьте, что изменения вступили в силу. Как это можно сделать?
echo $HOME
# по ctrl+D выйдите из bash

#9. Определите местоположение в системе файла вызываемого командой bash, используя команду which.
which bash

# Задание 2
#1. Определите имя вашего пользователя.
id
whoami

#2. Определите имена пользователей, работающих с системой в данный момент. Найдите себя в этом списке.
w

#3. Определите имена трех последних пользователей кроме вас, заходивших в систему.
last | head -3

#4. Определите, в каких группах состоит ваш пользователь.
id

#5. Откройте файл /etc/passwd, используя команду more /etc/passwd. Найдите запись с данными вашего пользователя. Проанализируйте все поля записи и опишите их назначение. Используйте справку по файлу (man 5 passwd) для ознакомления со значением всех полей.
root:*:0:0:System Administrator:/var/root:/bin/sh
имя:парольеслиесть:юзер ID: груп ID:коментарий:домашняя дира:оболочка

#6. Выведите на экран информацию о пользователе, используя команду finger.  Попробуйте изменить полное имя пользователя и добавить свой номер телефона при помощи команды chfn.
не работают команды

#7. Договоритесь с соседним пользователем об организации обмена прямыми сообщениями. Обменяйтесь с ним сообщениями в режиме прямого диалога.
#: вводим команду w
#: ищем любого близжайшего соседа по его имени юзера
#: шлем ему сообщение через команду
write b16v7412 pts/1
message
#ctrl+d

#8. Исследуйте возможности блокирования и разблокирования средств приема сообщений.
# запрещение посыла тебе сообщений2yy
mesg n
# разрешение посыла тебе сообщений2yy
mesg y

#9. По договоренности с коллегами обменяйтесь несколькими почтовыми сообщениями.  Проанализируйте возможности обработки поступивших почтовых сообщений.
printf "hello!\n" | mail b16v7412
# у получателя надо ввести команду
mail
# чтобы прочитать это письмо

#10. Проанализируйте с использованием команды history содержание лабораторной работы, продумайте ответы на нижеприведенные контрольные вопросы и сдайте выполненную работу преподавателю. После получения зачета по работе – уничтожьте все созданные файлы и корректно выйдите из системы.

#вопросы
echo '
1. Опишите процесс загрузки операционной системы.
Файлы операционной системы хранятся во внешней, долговременной памяти (на жестком, гибком или лазерном диске). Однако программы могут выполняться, только если они находятся в оперативной памяти, поэтому файлы операционной системы необходимо загрузить в оперативную память.
Диск (жесткий, гибкий или лазерный), на котором находятся файлы операционной системы и с которого производится ее загрузка, называется системным.
После включения компьютера производится загрузка операционной системы с системного диска в оперативную память. Загрузка должна выполняться в соответствии с программой загрузки. Однако для того чтобы компьютер выполнял какую-нибудь программу, эта программа должна уже находиться в оперативной памяти. Разрешение этого противоречия состоит в последовательной, поэтапной загрузке операционной системы.
Самотестирование компьютера. В состав компьютера входит энергонезависимое постоянное запоминающее устройство (ПЗУ), содержащее программы тестирования компьютера и первого этапа загрузки операционной системы - это BIOS (Basic Input/Output System - базовая система ввода/вывода).
После включения питания компьютера или нажатия кнопки Reset на системном блоке компьютера или одновременного нажатия комбинации клавиш {Ctrl+Alt+Del} на клавиатуре процессор начинает выполнение программы самотестирования компьютера POST (Power-ON Self Test). Производится тестирование работоспособности процессора, памяти и других аппаратных средств компьютера.
В процессе тестирования сначала могут выдаваться диагностические сообщения в виде различных последовательностей коротких и длинных звуковых сигналов (например, 1 длинный и 3 коротких - не подключен монитор, 5 коротких - ошибка процессора и так далее). После успешной инициализации видеокарты краткие диагностические сообщения выводятся на экран монитора.
Для установки правильной даты и времени, а также внесения изменений в конфигурацию аппаратных средств компьютера в процессе выполнения самотестирования необходимо нажать клавишу {Del}. Загрузится системная утилита BIOS Setup, имеющая интерфейс в виде системы иерархических меню. Пользователь может установить новые параметры конфигурации компьютера и запомнить их в специальной микросхеме памяти, которая при выключенном компьютере питается от батарейки, установленной на системной плате. В случае выхода из строя батарейки конфигурационные параметры теряются и компьютер перестает нормально загружаться.
Загрузка операционной системы. После проведения самотестирования специальная программа, содержащаяся в BIOS, начинает поиск загрузчика операционной системы. Происходит поочередное обращение к имеющимся в компьютере дискам (гибким, жестким, CD-ROM) и поиск на определенном месте (в первом, так называемом загрузочном секторе диска) наличия специальной программы Master Boot (программы-загрузчика операционной системы).
Если диск системный и программа-загрузчик оказывается на месте, то она загружается в оперативную память и ей передается управление работой компьютера. Программа ищет файлы операционной системы на системном диске и загружает их в оперативную память в качестве программных модулей (рис. 4.20).

Рис. 4.20. Процесс загрузки операционной системы
  
Если системные диски в компьютере отсутствуют, на экране монитора появляется сообщение "Non system disk", и компьютер "зависает", то есть загрузка операционной системы прекращается и компьютер остается неработоспособным.
После окончания загрузки операционной системы управление передается командному процессору. В случае использования интерфейса командной строки на экране появляется приглашение системы к вводу команд. Приглашение представляет собой последовательность символов, сообщающих о текущем диске и каталоге. Например, если загрузка операционной системы была произведена с диска С:, а операционная система была установлена в каталог WINDOWS, то появится приглашение:
C:\WINDOWS>
В случае загрузки графического интерфейса операционной системы команды могут вводиться с помощью мыши.
2. Что такое уровни инициализации, и зачем они нужны?
В процессе загрузки, после инициализации 0%AF%D0%B4%D1%80%D0%BE_%D0%BE%D0%BF%D0%B5%D1%80%D0%B0%D1%86%D0%B8%D0%BE%D0%BD%D0%BD%D0%BE%D0%B9_%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D1%8B"ядра, ядро запускает /sbin/init как первый процесс 0%9F%D1%80%D0%BE%D1%81%D1%82%D1%80%D0%B0%D0%BD%D1%81%D1%82%D0%B2%D0%BE_%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8F"пользовательского режима. init отвечает за дальнейшую загрузку системы. Для этого он запускает так называемые стартовые скрипты, которые выполняют проверку и монтирование файловых систем, запуск необходимых демонов, настройку ядра (в том числе загрузку модулей ядра согласно установленному оборудованию, настройку IP-адресов, таблиц маршрутизации и др.), запуск графической оболочки и другие действия.
В операционных системах Unix/Linux с помощью init можно изменить уровень инициализации. Уровень инициализации — степень загрузки операционной системы. Вот как происходит инициализация системы: процесс init запускается и анализирует файл /etc/inittab. Следует отметить, что приведенная здесь система инициализации работает на системах Linux и Unix System V и она несколько отличается от стиля инициализации системы в BSD-подобных системах.
По умолчанию, в системе использовано 7 уровней инициализации:
0 - остановка системы
1 - загрузка в однопользовательском режиме 2 - загрузка в многопользовательском режиме без поддержки сети 3 - загрузка в многопользовательском режиме с поддержкой сети 4 - не используется 5 - загрузка в многопользовательском режиме с поддержкой сети и графического входа в систему
6 - перезагрузка
В большинстве Unix/Linux системах, узнать текущий уровень инициализации можно командами:
$ runlevel
$ who -r
Набрав init n в терминале (с правами суперпользователя), где n — номер уровня инициализации, можно переключиться в любой из вышеперечисленных уровней.
Стартовые скрипты для каждого уровня находятся в каталогах с /etc/rc0.d до /etc/rc6.d, где цифра после rc соответствует номеру уровня инициализации.
3. В чем заключается процедура авторизации пользователя? Цель авторизации?
Авториза́ция (от 0%90%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%B8%D0%B9_%D1%8F%D0%B7%D1%8B%D0%BA"англ. authorization — разрешение, уполномочивание) — предоставление определённому лицу или группе лиц прав на выполнение определённых действий; а также процесс проверки (подтверждения) данных прав при попытке выполнения этих действий.0%90%D0%B2%D1%82%D0%BE%D1%80%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F"[1]HYPERLINK "http://ru.wikipedia.org/wiki/%D0%90%D0%B2%D1%82%D0%BE%D1%80%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F"[2]HYPERLINK "http://ru.wikipedia.org/wiki/%D0%90%D0%B2%D1%82%D0%BE%D1%80%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F"[3] Часто можно услышать выражение, что какой-то человек «авторизован» для выполнения данной операции — это значит, что он имеет на неё право.

5. Что такое среда пользователя? Опишите, как добавить новую переменную в среду, как изменить значение существующей переменной для одного пользователя и всех пользователей в системе.
http://www.gentoo.org/doc/ru/handbook/handbook-x86.xml?part=2&chap=5
Переменная среды́ (0%90%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%B8%D0%B9_%D1%8F%D0%B7%D1%8B%D0%BA"англ. environment variable) — текстовая переменная 0%9E%D0%BF%D0%B5%D1%80%D0%B0%D1%86%D0%B8%D0%BE%D0%BD%D0%BD%D0%B0%D1%8F_%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B0"операционной системы, хранящая какую-либо информацию — например, данные о настройках системы.
Переменные среды устанавливаются пользователем или сценариями оболочки. Начальный набор переменных задаётся стартовыми сценариями операционной системы и сценариями, запускаемыми при регистрации пользователя в системе, в частности, /etc/profile и ~/.bash_profile.
Среда имеет большое значение в UNIX-системах, так как хранит множество настроек как системы в целом, так и отдельных программ. Важной особенностью является то, что при создании нового процесса он получает локальную копию среды, а, значит, не может изменить напрямую глобальные установки.
Среда представляет собой набор пар «имя переменной» и «значение переменной», реализация управления которыми возложена обычно на командный интерпретатор. Так как существует достаточно большое количество интерпретаторов, синтаксис отличается в зависимости от используемого пользователем. Как «имя», так и «значение» чувствительны к регистру символов, «Имя» обычно указывается в верхнем регистре, использование пробелов недопустимо.
В сценариях обычно используются объявления вида ИМЯ_ПЕРЕМЕННОЙ="значение переменной", но конкретный синтаксис зависит от используемого интерпретатора.
Для получения значения переменной необходимо перед её именем поставить символ доллара. Так же иногда требуется заключить имя в скобки (например, в сценариях утилиты make).
Из командной строки управление переменными осуществляется с помощью export и env.'
